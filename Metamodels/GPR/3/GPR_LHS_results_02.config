MetaSolver(SamplingSolver(Dict{Symbol,Any}(:nbins=>23,:nsamples=>500,:sampling_function=>latinHypercube), Main.MscThesis.hard_constraints, Main.MscThesis.simple_strategy, 500, true), Surrogate[Surrogate(Array{Number}(0,0), Array{Number}(0,0), PyObject GaussianProcessRegressor(alpha=1e-10, copy_X_train=True, kernel=None,
             n_restarts_optimizer=0, normalize_y=False,
             optimizer='fmin_l_bfgs_b', random_state=None), Tuple{AbstractObjective,Array{Int64,1}}[(Objective(##25#27(), 1, :MIN), [1]), (Objective(##26#28(), 1, :MIN), [1])], [1, 2], Colon(), sk_fit!, Dict{Symbol,Any}(), sk_fit!, 0, 1.0, sk_predict)], Dict{Symbol,Any}(:nbins=>10,:nsamples=>100,:sampling_function=>latinHypercube), 225, true)
Model(Main.MscThesis.AbstractVariable[RealVariable(-3.14159, π = 3.1415926535897..., 0.0), RealVariable(0, 12.5664, 6.28319), RealVariable(-3.14159, π = 3.1415926535897..., 0.0), RealVariable(0, 12.5664, 6.28319), RealVariable(-3.14159, π = 3.1415926535897..., 0.0), RealVariable(0, 12.5664, 6.28319)], AbstractObjective[Objective(##25#27(), 1, :MIN), Objective(##26#28(), 1, :MIN)], Constraint[])
